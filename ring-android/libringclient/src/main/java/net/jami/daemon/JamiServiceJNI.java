/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.jami.daemon;

public class JamiServiceJNI {
  public final static native long new_StringMap__SWIG_0();
  public final static native long new_StringMap__SWIG_1(long jarg1, StringMap jarg1_);
  public final static native long StringMap_Iterator_getNextUnchecked(long jarg1, StringMap.Iterator jarg1_);
  public final static native boolean StringMap_Iterator_isNot(long jarg1, StringMap.Iterator jarg1_, long jarg2, StringMap.Iterator jarg2_);
  public final static native String StringMap_Iterator_getKey(long jarg1, StringMap.Iterator jarg1_);
  public final static native String StringMap_Iterator_getValue(long jarg1, StringMap.Iterator jarg1_);
  public final static native void StringMap_Iterator_setValue(long jarg1, StringMap.Iterator jarg1_, String jarg2);
  public final static native void delete_StringMap_Iterator(long jarg1);
  public final static native boolean StringMap_isEmpty(long jarg1, StringMap jarg1_);
  public final static native void StringMap_clear(long jarg1, StringMap jarg1_);
  public final static native long StringMap_find(long jarg1, StringMap jarg1_, String jarg2);
  public final static native long StringMap_begin(long jarg1, StringMap jarg1_);
  public final static native long StringMap_end(long jarg1, StringMap jarg1_);
  public final static native int StringMap_sizeImpl(long jarg1, StringMap jarg1_);
  public final static native boolean StringMap_containsImpl(long jarg1, StringMap jarg1_, String jarg2);
  public final static native void StringMap_putUnchecked(long jarg1, StringMap jarg1_, String jarg2, String jarg3);
  public final static native void StringMap_removeUnchecked(long jarg1, StringMap jarg1_, long jarg2, StringMap.Iterator jarg2_);
  public final static native long StringMap_keys(long jarg1, StringMap jarg1_);
  public final static native void StringMap_setRaw(long jarg1, StringMap jarg1_, String jarg2, long jarg3, Blob jarg3_);
  public final static native long StringMap_getRaw(long jarg1, StringMap jarg1_, String jarg2);
  public final static native void delete_StringMap(long jarg1);
  public final static native long new_StringVect__SWIG_0();
  public final static native long new_StringVect__SWIG_1(long jarg1, StringVect jarg1_);
  public final static native long StringVect_capacity(long jarg1, StringVect jarg1_);
  public final static native void StringVect_reserve(long jarg1, StringVect jarg1_, long jarg2);
  public final static native boolean StringVect_isEmpty(long jarg1, StringVect jarg1_);
  public final static native void StringVect_clear(long jarg1, StringVect jarg1_);
  public final static native long new_StringVect__SWIG_2(int jarg1, String jarg2);
  public final static native int StringVect_doSize(long jarg1, StringVect jarg1_);
  public final static native void StringVect_doAdd__SWIG_0(long jarg1, StringVect jarg1_, String jarg2);
  public final static native void StringVect_doAdd__SWIG_1(long jarg1, StringVect jarg1_, int jarg2, String jarg3);
  public final static native String StringVect_doRemove(long jarg1, StringVect jarg1_, int jarg2);
  public final static native String StringVect_doGet(long jarg1, StringVect jarg1_, int jarg2);
  public final static native String StringVect_doSet(long jarg1, StringVect jarg1_, int jarg2, String jarg3);
  public final static native void StringVect_doRemoveRange(long jarg1, StringVect jarg1_, int jarg2, int jarg3);
  public final static native void delete_StringVect(long jarg1);
  public final static native long new_VectMap__SWIG_0();
  public final static native long new_VectMap__SWIG_1(long jarg1, VectMap jarg1_);
  public final static native long VectMap_capacity(long jarg1, VectMap jarg1_);
  public final static native void VectMap_reserve(long jarg1, VectMap jarg1_, long jarg2);
  public final static native boolean VectMap_isEmpty(long jarg1, VectMap jarg1_);
  public final static native void VectMap_clear(long jarg1, VectMap jarg1_);
  public final static native long new_VectMap__SWIG_2(int jarg1, long jarg2, StringMap jarg2_);
  public final static native int VectMap_doSize(long jarg1, VectMap jarg1_);
  public final static native void VectMap_doAdd__SWIG_0(long jarg1, VectMap jarg1_, long jarg2, StringMap jarg2_);
  public final static native void VectMap_doAdd__SWIG_1(long jarg1, VectMap jarg1_, int jarg2, long jarg3, StringMap jarg3_);
  public final static native long VectMap_doRemove(long jarg1, VectMap jarg1_, int jarg2);
  public final static native long VectMap_doGet(long jarg1, VectMap jarg1_, int jarg2);
  public final static native long VectMap_doSet(long jarg1, VectMap jarg1_, int jarg2, long jarg3, StringMap jarg3_);
  public final static native void VectMap_doRemoveRange(long jarg1, VectMap jarg1_, int jarg2, int jarg3);
  public final static native void delete_VectMap(long jarg1);
  public final static native long new_IntegerMap__SWIG_0();
  public final static native long new_IntegerMap__SWIG_1(long jarg1, IntegerMap jarg1_);
  public final static native long IntegerMap_Iterator_getNextUnchecked(long jarg1, IntegerMap.Iterator jarg1_);
  public final static native boolean IntegerMap_Iterator_isNot(long jarg1, IntegerMap.Iterator jarg1_, long jarg2, IntegerMap.Iterator jarg2_);
  public final static native String IntegerMap_Iterator_getKey(long jarg1, IntegerMap.Iterator jarg1_);
  public final static native int IntegerMap_Iterator_getValue(long jarg1, IntegerMap.Iterator jarg1_);
  public final static native void IntegerMap_Iterator_setValue(long jarg1, IntegerMap.Iterator jarg1_, int jarg2);
  public final static native void delete_IntegerMap_Iterator(long jarg1);
  public final static native boolean IntegerMap_isEmpty(long jarg1, IntegerMap jarg1_);
  public final static native void IntegerMap_clear(long jarg1, IntegerMap jarg1_);
  public final static native long IntegerMap_find(long jarg1, IntegerMap jarg1_, String jarg2);
  public final static native long IntegerMap_begin(long jarg1, IntegerMap jarg1_);
  public final static native long IntegerMap_end(long jarg1, IntegerMap jarg1_);
  public final static native int IntegerMap_sizeImpl(long jarg1, IntegerMap jarg1_);
  public final static native boolean IntegerMap_containsImpl(long jarg1, IntegerMap jarg1_, String jarg2);
  public final static native void IntegerMap_putUnchecked(long jarg1, IntegerMap jarg1_, String jarg2, int jarg3);
  public final static native void IntegerMap_removeUnchecked(long jarg1, IntegerMap jarg1_, long jarg2, IntegerMap.Iterator jarg2_);
  public final static native void delete_IntegerMap(long jarg1);
  public final static native long new_IntVect__SWIG_0();
  public final static native long new_IntVect__SWIG_1(long jarg1, IntVect jarg1_);
  public final static native long IntVect_capacity(long jarg1, IntVect jarg1_);
  public final static native void IntVect_reserve(long jarg1, IntVect jarg1_, long jarg2);
  public final static native boolean IntVect_isEmpty(long jarg1, IntVect jarg1_);
  public final static native void IntVect_clear(long jarg1, IntVect jarg1_);
  public final static native long new_IntVect__SWIG_2(int jarg1, int jarg2);
  public final static native int IntVect_doSize(long jarg1, IntVect jarg1_);
  public final static native void IntVect_doAdd__SWIG_0(long jarg1, IntVect jarg1_, int jarg2);
  public final static native void IntVect_doAdd__SWIG_1(long jarg1, IntVect jarg1_, int jarg2, int jarg3);
  public final static native int IntVect_doRemove(long jarg1, IntVect jarg1_, int jarg2);
  public final static native int IntVect_doGet(long jarg1, IntVect jarg1_, int jarg2);
  public final static native int IntVect_doSet(long jarg1, IntVect jarg1_, int jarg2, int jarg3);
  public final static native void IntVect_doRemoveRange(long jarg1, IntVect jarg1_, int jarg2, int jarg3);
  public final static native void delete_IntVect(long jarg1);
  public final static native long new_UintVect__SWIG_0();
  public final static native long new_UintVect__SWIG_1(long jarg1, UintVect jarg1_);
  public final static native long UintVect_capacity(long jarg1, UintVect jarg1_);
  public final static native void UintVect_reserve(long jarg1, UintVect jarg1_, long jarg2);
  public final static native boolean UintVect_isEmpty(long jarg1, UintVect jarg1_);
  public final static native void UintVect_clear(long jarg1, UintVect jarg1_);
  public final static native long new_UintVect__SWIG_2(int jarg1, long jarg2);
  public final static native int UintVect_doSize(long jarg1, UintVect jarg1_);
  public final static native void UintVect_doAdd__SWIG_0(long jarg1, UintVect jarg1_, long jarg2);
  public final static native void UintVect_doAdd__SWIG_1(long jarg1, UintVect jarg1_, int jarg2, long jarg3);
  public final static native long UintVect_doRemove(long jarg1, UintVect jarg1_, int jarg2);
  public final static native long UintVect_doGet(long jarg1, UintVect jarg1_, int jarg2);
  public final static native long UintVect_doSet(long jarg1, UintVect jarg1_, int jarg2, long jarg3);
  public final static native void UintVect_doRemoveRange(long jarg1, UintVect jarg1_, int jarg2, int jarg3);
  public final static native void delete_UintVect(long jarg1);
  public final static native long new_Blob__SWIG_0();
  public final static native long new_Blob__SWIG_1(long jarg1, Blob jarg1_);
  public final static native long Blob_capacity(long jarg1, Blob jarg1_);
  public final static native void Blob_reserve(long jarg1, Blob jarg1_, long jarg2);
  public final static native boolean Blob_isEmpty(long jarg1, Blob jarg1_);
  public final static native void Blob_clear(long jarg1, Blob jarg1_);
  public final static native long new_Blob__SWIG_2(int jarg1, byte jarg2);
  public final static native int Blob_doSize(long jarg1, Blob jarg1_);
  public final static native void Blob_doAdd__SWIG_0(long jarg1, Blob jarg1_, byte jarg2);
  public final static native void Blob_doAdd__SWIG_1(long jarg1, Blob jarg1_, int jarg2, byte jarg3);
  public final static native byte Blob_doRemove(long jarg1, Blob jarg1_, int jarg2);
  public final static native byte Blob_doGet(long jarg1, Blob jarg1_, int jarg2);
  public final static native byte Blob_doSet(long jarg1, Blob jarg1_, int jarg2, byte jarg3);
  public final static native void Blob_doRemoveRange(long jarg1, Blob jarg1_, int jarg2, int jarg3);
  public final static native void delete_Blob(long jarg1);
  public final static native long new_FloatVect__SWIG_0();
  public final static native long new_FloatVect__SWIG_1(long jarg1, FloatVect jarg1_);
  public final static native long FloatVect_capacity(long jarg1, FloatVect jarg1_);
  public final static native void FloatVect_reserve(long jarg1, FloatVect jarg1_, long jarg2);
  public final static native boolean FloatVect_isEmpty(long jarg1, FloatVect jarg1_);
  public final static native void FloatVect_clear(long jarg1, FloatVect jarg1_);
  public final static native long new_FloatVect__SWIG_2(int jarg1, float jarg2);
  public final static native int FloatVect_doSize(long jarg1, FloatVect jarg1_);
  public final static native void FloatVect_doAdd__SWIG_0(long jarg1, FloatVect jarg1_, float jarg2);
  public final static native void FloatVect_doAdd__SWIG_1(long jarg1, FloatVect jarg1_, int jarg2, float jarg3);
  public final static native float FloatVect_doRemove(long jarg1, FloatVect jarg1_, int jarg2);
  public final static native float FloatVect_doGet(long jarg1, FloatVect jarg1_, int jarg2);
  public final static native float FloatVect_doSet(long jarg1, FloatVect jarg1_, int jarg2, float jarg3);
  public final static native void FloatVect_doRemoveRange(long jarg1, FloatVect jarg1_, int jarg2, int jarg3);
  public final static native void delete_FloatVect(long jarg1);
  public final static native void fini();
  public final static native String placeCall(String jarg1, String jarg2, long jarg3, StringMap jarg3_);
  public final static native String placeCallWithMedia(String jarg1, String jarg2, long jarg3, VectMap jarg3_);
  public final static native boolean requestMediaChange(String jarg1, long jarg2, VectMap jarg2_);
  public final static native boolean refuse(String jarg1);
  public final static native boolean accept(String jarg1);
  public final static native boolean acceptWithMedia(String jarg1, long jarg2, VectMap jarg2_);
  public final static native boolean answerMediaChangeRequest(String jarg1, long jarg2, VectMap jarg2_);
  public final static native boolean hangUp(String jarg1);
  public final static native boolean hold(String jarg1);
  public final static native boolean unhold(String jarg1);
  public final static native boolean muteLocalMedia(String jarg1, String jarg2, boolean jarg3);
  public final static native boolean transfer(String jarg1, String jarg2);
  public final static native boolean attendedTransfer(String jarg1, String jarg2);
  public final static native long getCallDetails(String jarg1);
  public final static native long getCallList();
  public final static native void removeConference(String jarg1);
  public final static native boolean joinParticipant(String jarg1, String jarg2);
  public final static native void createConfFromParticipantList(long jarg1, StringVect jarg1_);
  public final static native void setConferenceLayout(String jarg1, int jarg2);
  public final static native void setActiveParticipant(String jarg1, String jarg2);
  public final static native boolean isConferenceParticipant(String jarg1);
  public final static native boolean addParticipant(String jarg1, String jarg2);
  public final static native boolean addMainParticipant(String jarg1);
  public final static native boolean detachParticipant(String jarg1);
  public final static native boolean joinConference(String jarg1, String jarg2);
  public final static native boolean hangUpConference(String jarg1);
  public final static native boolean holdConference(String jarg1);
  public final static native boolean unholdConference(String jarg1);
  public final static native long getConferenceList();
  public final static native long getParticipantList(String jarg1);
  public final static native long getDisplayNames(String jarg1);
  public final static native String getConferenceId(String jarg1);
  public final static native long getConferenceDetails(String jarg1);
  public final static native long getConferenceInfos(String jarg1);
  public final static native void setModerator(String jarg1, String jarg2, boolean jarg3);
  public final static native void muteParticipant(String jarg1, String jarg2, boolean jarg3);
  public final static native void hangupParticipant(String jarg1, String jarg2);
  public final static native boolean startRecordedFilePlayback(String jarg1);
  public final static native void stopRecordedFilePlayback();
  public final static native boolean toggleRecording(String jarg1);
  public final static native void setRecording(String jarg1);
  public final static native void recordPlaybackSeek(double jarg1);
  public final static native boolean getIsRecording(String jarg1);
  public final static native String getCurrentAudioCodecName(String jarg1);
  public final static native void playDTMF(String jarg1);
  public final static native void startTone(int jarg1, int jarg2);
  public final static native boolean switchInput__SWIG_0(String jarg1, String jarg2);
  public final static native void sendTextMessage(String jarg1, long jarg2, StringMap jarg2_, String jarg3, boolean jarg4);
  public final static native void delete_Callback(long jarg1);
  public final static native void Callback_callStateChanged(long jarg1, Callback jarg1_, String jarg2, String jarg3, int jarg4);
  public final static native void Callback_callStateChangedSwigExplicitCallback(long jarg1, Callback jarg1_, String jarg2, String jarg3, int jarg4);
  public final static native void Callback_transferFailed(long jarg1, Callback jarg1_);
  public final static native void Callback_transferFailedSwigExplicitCallback(long jarg1, Callback jarg1_);
  public final static native void Callback_transferSucceeded(long jarg1, Callback jarg1_);
  public final static native void Callback_transferSucceededSwigExplicitCallback(long jarg1, Callback jarg1_);
  public final static native void Callback_recordPlaybackStopped(long jarg1, Callback jarg1_, String jarg2);
  public final static native void Callback_recordPlaybackStoppedSwigExplicitCallback(long jarg1, Callback jarg1_, String jarg2);
  public final static native void Callback_voiceMailNotify(long jarg1, Callback jarg1_, String jarg2, int jarg3, int jarg4, int jarg5);
  public final static native void Callback_voiceMailNotifySwigExplicitCallback(long jarg1, Callback jarg1_, String jarg2, int jarg3, int jarg4, int jarg5);
  public final static native void Callback_incomingMessage(long jarg1, Callback jarg1_, String jarg2, String jarg3, long jarg4, StringMap jarg4_);
  public final static native void Callback_incomingMessageSwigExplicitCallback(long jarg1, Callback jarg1_, String jarg2, String jarg3, long jarg4, StringMap jarg4_);
  public final static native void Callback_incomingCall(long jarg1, Callback jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native void Callback_incomingCallSwigExplicitCallback(long jarg1, Callback jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native void Callback_incomingCallWithMedia(long jarg1, Callback jarg1_, String jarg2, String jarg3, String jarg4, long jarg5, VectMap jarg5_);
  public final static native void Callback_incomingCallWithMediaSwigExplicitCallback(long jarg1, Callback jarg1_, String jarg2, String jarg3, String jarg4, long jarg5, VectMap jarg5_);
  public final static native void Callback_mediaChangeRequested(long jarg1, Callback jarg1_, String jarg2, String jarg3, long jarg4, VectMap jarg4_);
  public final static native void Callback_mediaChangeRequestedSwigExplicitCallback(long jarg1, Callback jarg1_, String jarg2, String jarg3, long jarg4, VectMap jarg4_);
  public final static native void Callback_recordPlaybackFilepath(long jarg1, Callback jarg1_, String jarg2, String jarg3);
  public final static native void Callback_recordPlaybackFilepathSwigExplicitCallback(long jarg1, Callback jarg1_, String jarg2, String jarg3);
  public final static native void Callback_conferenceCreated(long jarg1, Callback jarg1_, String jarg2);
  public final static native void Callback_conferenceCreatedSwigExplicitCallback(long jarg1, Callback jarg1_, String jarg2);
  public final static native void Callback_conferenceChanged(long jarg1, Callback jarg1_, String jarg2, String jarg3);
  public final static native void Callback_conferenceChangedSwigExplicitCallback(long jarg1, Callback jarg1_, String jarg2, String jarg3);
  public final static native void Callback_conferenceRemoved(long jarg1, Callback jarg1_, String jarg2);
  public final static native void Callback_conferenceRemovedSwigExplicitCallback(long jarg1, Callback jarg1_, String jarg2);
  public final static native void Callback_updatePlaybackScale(long jarg1, Callback jarg1_, String jarg2, int jarg3, int jarg4);
  public final static native void Callback_updatePlaybackScaleSwigExplicitCallback(long jarg1, Callback jarg1_, String jarg2, int jarg3, int jarg4);
  public final static native void Callback_newCall(long jarg1, Callback jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native void Callback_newCallSwigExplicitCallback(long jarg1, Callback jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native void Callback_sipCallStateChange(long jarg1, Callback jarg1_, String jarg2, String jarg3, int jarg4);
  public final static native void Callback_sipCallStateChangeSwigExplicitCallback(long jarg1, Callback jarg1_, String jarg2, String jarg3, int jarg4);
  public final static native void Callback_recordingStateChanged(long jarg1, Callback jarg1_, String jarg2, int jarg3);
  public final static native void Callback_recordingStateChangedSwigExplicitCallback(long jarg1, Callback jarg1_, String jarg2, int jarg3);
  public final static native void Callback_recordStateChange(long jarg1, Callback jarg1_, String jarg2, int jarg3);
  public final static native void Callback_recordStateChangeSwigExplicitCallback(long jarg1, Callback jarg1_, String jarg2, int jarg3);
  public final static native void Callback_onRtcpReportReceived(long jarg1, Callback jarg1_, String jarg2, long jarg3, IntegerMap jarg3_);
  public final static native void Callback_onRtcpReportReceivedSwigExplicitCallback(long jarg1, Callback jarg1_, String jarg2, long jarg3, IntegerMap jarg3_);
  public final static native void Callback_onConferenceInfosUpdated(long jarg1, Callback jarg1_, String jarg2, long jarg3, VectMap jarg3_);
  public final static native void Callback_onConferenceInfosUpdatedSwigExplicitCallback(long jarg1, Callback jarg1_, String jarg2, long jarg3, VectMap jarg3_);
  public final static native void Callback_peerHold(long jarg1, Callback jarg1_, String jarg2, boolean jarg3);
  public final static native void Callback_peerHoldSwigExplicitCallback(long jarg1, Callback jarg1_, String jarg2, boolean jarg3);
  public final static native void Callback_connectionUpdate(long jarg1, Callback jarg1_, String jarg2, int jarg3);
  public final static native void Callback_connectionUpdateSwigExplicitCallback(long jarg1, Callback jarg1_, String jarg2, int jarg3);
  public final static native void Callback_remoteRecordingChanged(long jarg1, Callback jarg1_, String jarg2, String jarg3, boolean jarg4);
  public final static native void Callback_remoteRecordingChangedSwigExplicitCallback(long jarg1, Callback jarg1_, String jarg2, String jarg3, boolean jarg4);
  public final static native void Callback_mediaNegotiationStatus(long jarg1, Callback jarg1_, String jarg2, String jarg3, long jarg4, VectMap jarg4_);
  public final static native void Callback_mediaNegotiationStatusSwigExplicitCallback(long jarg1, Callback jarg1_, String jarg2, String jarg3, long jarg4, VectMap jarg4_);
  public final static native long new_Callback();
  public final static native void Callback_director_connect(Callback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void Callback_change_ownership(Callback obj, long cptr, boolean take_or_release);
  public final static native long new_MessageVect__SWIG_0();
  public final static native long new_MessageVect__SWIG_1(long jarg1, MessageVect jarg1_);
  public final static native long MessageVect_capacity(long jarg1, MessageVect jarg1_);
  public final static native void MessageVect_reserve(long jarg1, MessageVect jarg1_, long jarg2);
  public final static native boolean MessageVect_isEmpty(long jarg1, MessageVect jarg1_);
  public final static native void MessageVect_clear(long jarg1, MessageVect jarg1_);
  public final static native long new_MessageVect__SWIG_2(int jarg1, long jarg2, Message jarg2_);
  public final static native int MessageVect_doSize(long jarg1, MessageVect jarg1_);
  public final static native void MessageVect_doAdd__SWIG_0(long jarg1, MessageVect jarg1_, long jarg2, Message jarg2_);
  public final static native void MessageVect_doAdd__SWIG_1(long jarg1, MessageVect jarg1_, int jarg2, long jarg3, Message jarg3_);
  public final static native long MessageVect_doRemove(long jarg1, MessageVect jarg1_, int jarg2);
  public final static native long MessageVect_doGet(long jarg1, MessageVect jarg1_, int jarg2);
  public final static native long MessageVect_doSet(long jarg1, MessageVect jarg1_, int jarg2, long jarg3, Message jarg3_);
  public final static native void MessageVect_doRemoveRange(long jarg1, MessageVect jarg1_, int jarg2, int jarg3);
  public final static native void delete_MessageVect(long jarg1);
  public final static native void Message_from_set(long jarg1, Message jarg1_, String jarg2);
  public final static native String Message_from_get(long jarg1, Message jarg1_);
  public final static native void Message_payloads_set(long jarg1, Message jarg1_, long jarg2, StringMap jarg2_);
  public final static native long Message_payloads_get(long jarg1, Message jarg1_);
  public final static native void Message_received_set(long jarg1, Message jarg1_, long jarg2);
  public final static native long Message_received_get(long jarg1, Message jarg1_);
  public final static native long new_Message();
  public final static native void delete_Message(long jarg1);
  public final static native long getAccountDetails(String jarg1);
  public final static native long getVolatileAccountDetails(String jarg1);
  public final static native void setAccountDetails(String jarg1, long jarg2, StringMap jarg2_);
  public final static native void setAccountActive(String jarg1, boolean jarg2);
  public final static native long getAccountTemplate(String jarg1);
  public final static native void monitor(boolean jarg1);
  public final static native String addAccount(long jarg1, StringMap jarg1_);
  public final static native void removeAccount(String jarg1);
  public final static native long getAccountList();
  public final static native void sendRegister(String jarg1, boolean jarg2);
  public final static native void registerAllAccounts();
  public final static native long sendAccountTextMessage(String jarg1, String jarg2, long jarg3, StringMap jarg3_);
  public final static native long getLastMessages(String jarg1, long jarg2);
  public final static native int getMessageStatus__SWIG_0(long jarg1);
  public final static native int getMessageStatus__SWIG_1(String jarg1, long jarg2);
  public final static native boolean cancelMessage(String jarg1, long jarg2);
  public final static native void setIsComposing(String jarg1, String jarg2, boolean jarg3);
  public final static native boolean setMessageDisplayed(String jarg1, String jarg2, String jarg3, int jarg4);
  public final static native boolean changeAccountPassword(String jarg1, String jarg2, String jarg3);
  public final static native boolean lookupName(String jarg1, String jarg2, String jarg3);
  public final static native boolean lookupAddress(String jarg1, String jarg2, String jarg3);
  public final static native boolean registerName(String jarg1, String jarg2, String jarg3);
  public final static native boolean searchUser(String jarg1, String jarg2);
  public final static native long getCodecList();
  public final static native long getSupportedTlsMethod();
  public final static native long getSupportedCiphers(String jarg1);
  public final static native long getCodecDetails(String jarg1, long jarg2);
  public final static native boolean setCodecDetails(String jarg1, long jarg2, long jarg3, StringMap jarg3_);
  public final static native long getActiveCodecList(String jarg1);
  public final static native boolean exportOnRing(String jarg1, String jarg2);
  public final static native boolean exportToFile(String jarg1, String jarg2, String jarg3);
  public final static native long getKnownRingDevices(String jarg1);
  public final static native boolean revokeDevice(String jarg1, String jarg2, String jarg3);
  public final static native void setActiveCodecList(String jarg1, long jarg2, UintVect jarg2_);
  public final static native long getAudioPluginList();
  public final static native void setAudioPlugin(String jarg1);
  public final static native long getAudioOutputDeviceList();
  public final static native void setAudioOutputDevice(int jarg1);
  public final static native void setAudioInputDevice(int jarg1);
  public final static native void setAudioRingtoneDevice(int jarg1);
  public final static native long getAudioInputDeviceList();
  public final static native long getCurrentAudioDevicesIndex();
  public final static native int getAudioInputDeviceIndex(String jarg1);
  public final static native int getAudioOutputDeviceIndex(String jarg1);
  public final static native String getCurrentAudioOutputPlugin();
  public final static native boolean getNoiseSuppressState();
  public final static native void setNoiseSuppressState(boolean jarg1);
  public final static native boolean isAgcEnabled();
  public final static native void setAgcState(boolean jarg1);
  public final static native void muteDtmf(boolean jarg1);
  public final static native boolean isDtmfMuted();
  public final static native boolean isCaptureMuted();
  public final static native void muteCapture(boolean jarg1);
  public final static native boolean isPlaybackMuted();
  public final static native void mutePlayback(boolean jarg1);
  public final static native boolean isRingtoneMuted();
  public final static native void muteRingtone(boolean jarg1);
  public final static native String getAudioManager();
  public final static native boolean setAudioManager(String jarg1);
  public final static native String getRecordPath();
  public final static native void setRecordPath(String jarg1);
  public final static native boolean getIsAlwaysRecording();
  public final static native void setIsAlwaysRecording(boolean jarg1);
  public final static native boolean getRecordPreview();
  public final static native void setRecordPreview(boolean jarg1);
  public final static native int getRecordQuality();
  public final static native void setRecordQuality(int jarg1);
  public final static native void setHistoryLimit(int jarg1);
  public final static native int getHistoryLimit();
  public final static native void setRingingTimeout(int jarg1);
  public final static native int getRingingTimeout();
  public final static native void setAccountsOrder(String jarg1);
  public final static native long getCredentials(String jarg1);
  public final static native void setCredentials(String jarg1, long jarg2, VectMap jarg2_);
  public final static native String getAddrFromInterfaceName(String jarg1);
  public final static native long getAllIpInterface();
  public final static native long getAllIpInterfaceByName();
  public final static native long getShortcuts();
  public final static native void setShortcuts(long jarg1, StringMap jarg1_);
  public final static native void setVolume(String jarg1, double jarg2);
  public final static native double getVolume(String jarg1);
  public final static native long validateCertificatePath(String jarg1, String jarg2, String jarg3, String jarg4, String jarg5);
  public final static native long validateCertificate(String jarg1, String jarg2);
  public final static native long getCertificateDetails(String jarg1);
  public final static native long getCertificateDetailsPath(String jarg1, String jarg2, String jarg3);
  public final static native long getPinnedCertificates();
  public final static native long pinCertificate(long jarg1, Blob jarg1_, boolean jarg2);
  public final static native boolean unpinCertificate(String jarg1);
  public final static native void pinCertificatePath(String jarg1);
  public final static native long unpinCertificatePath(String jarg1);
  public final static native boolean pinRemoteCertificate(String jarg1, String jarg2);
  public final static native boolean setCertificateStatus(String jarg1, String jarg2, String jarg3);
  public final static native long getCertificatesByStatus(String jarg1, String jarg2);
  public final static native long getTrustRequests(String jarg1);
  public final static native boolean acceptTrustRequest(String jarg1, String jarg2);
  public final static native boolean discardTrustRequest(String jarg1, String jarg2);
  public final static native void sendTrustRequest(String jarg1, String jarg2, long jarg3, Blob jarg3_);
  public final static native void addContact(String jarg1, String jarg2);
  public final static native void removeContact(String jarg1, String jarg2, boolean jarg3);
  public final static native long getContacts(String jarg1);
  public final static native long getContactDetails(String jarg1, String jarg2);
  public final static native void connectivityChanged();
  public final static native void enableProxyClient(String jarg1, boolean jarg2);
  public final static native void setPushNotificationToken(String jarg1);
  public final static native void pushNotificationReceived(String jarg1, long jarg2, StringMap jarg2_);
  public final static native boolean isAudioMeterActive(String jarg1);
  public final static native void setAudioMeterState(String jarg1, boolean jarg2);
  public final static native void setDefaultModerator(String jarg1, String jarg2, boolean jarg3);
  public final static native long getDefaultModerators(String jarg1);
  public final static native void enableLocalModerators(String jarg1, boolean jarg2);
  public final static native boolean isLocalModeratorsEnabled(String jarg1);
  public final static native void setAllModerators(String jarg1, boolean jarg2);
  public final static native boolean isAllModerators(String jarg1);
  public final static native void delete_ConfigurationCallback(long jarg1);
  public final static native void ConfigurationCallback_volumeChanged(long jarg1, ConfigurationCallback jarg1_, String jarg2, int jarg3);
  public final static native void ConfigurationCallback_volumeChangedSwigExplicitConfigurationCallback(long jarg1, ConfigurationCallback jarg1_, String jarg2, int jarg3);
  public final static native void ConfigurationCallback_accountsChanged(long jarg1, ConfigurationCallback jarg1_);
  public final static native void ConfigurationCallback_accountsChangedSwigExplicitConfigurationCallback(long jarg1, ConfigurationCallback jarg1_);
  public final static native void ConfigurationCallback_historyChanged(long jarg1, ConfigurationCallback jarg1_);
  public final static native void ConfigurationCallback_historyChangedSwigExplicitConfigurationCallback(long jarg1, ConfigurationCallback jarg1_);
  public final static native void ConfigurationCallback_stunStatusFailure(long jarg1, ConfigurationCallback jarg1_, String jarg2);
  public final static native void ConfigurationCallback_stunStatusFailureSwigExplicitConfigurationCallback(long jarg1, ConfigurationCallback jarg1_, String jarg2);
  public final static native void ConfigurationCallback_accountDetailsChanged(long jarg1, ConfigurationCallback jarg1_, String jarg2, long jarg3, StringMap jarg3_);
  public final static native void ConfigurationCallback_accountDetailsChangedSwigExplicitConfigurationCallback(long jarg1, ConfigurationCallback jarg1_, String jarg2, long jarg3, StringMap jarg3_);
  public final static native void ConfigurationCallback_profileReceived(long jarg1, ConfigurationCallback jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native void ConfigurationCallback_profileReceivedSwigExplicitConfigurationCallback(long jarg1, ConfigurationCallback jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native void ConfigurationCallback_registrationStateChanged(long jarg1, ConfigurationCallback jarg1_, String jarg2, String jarg3, int jarg4, String jarg5);
  public final static native void ConfigurationCallback_registrationStateChangedSwigExplicitConfigurationCallback(long jarg1, ConfigurationCallback jarg1_, String jarg2, String jarg3, int jarg4, String jarg5);
  public final static native void ConfigurationCallback_volatileAccountDetailsChanged(long jarg1, ConfigurationCallback jarg1_, String jarg2, long jarg3, StringMap jarg3_);
  public final static native void ConfigurationCallback_volatileAccountDetailsChangedSwigExplicitConfigurationCallback(long jarg1, ConfigurationCallback jarg1_, String jarg2, long jarg3, StringMap jarg3_);
  public final static native void ConfigurationCallback_incomingAccountMessage(long jarg1, ConfigurationCallback jarg1_, String jarg2, String jarg3, String jarg4, long jarg5, StringMap jarg5_);
  public final static native void ConfigurationCallback_incomingAccountMessageSwigExplicitConfigurationCallback(long jarg1, ConfigurationCallback jarg1_, String jarg2, String jarg3, String jarg4, long jarg5, StringMap jarg5_);
  public final static native void ConfigurationCallback_accountMessageStatusChanged(long jarg1, ConfigurationCallback jarg1_, String jarg2, String jarg3, String jarg4, String jarg5, int jarg6);
  public final static native void ConfigurationCallback_accountMessageStatusChangedSwigExplicitConfigurationCallback(long jarg1, ConfigurationCallback jarg1_, String jarg2, String jarg3, String jarg4, String jarg5, int jarg6);
  public final static native void ConfigurationCallback_composingStatusChanged(long jarg1, ConfigurationCallback jarg1_, String jarg2, String jarg3, String jarg4, int jarg5);
  public final static native void ConfigurationCallback_composingStatusChangedSwigExplicitConfigurationCallback(long jarg1, ConfigurationCallback jarg1_, String jarg2, String jarg3, String jarg4, int jarg5);
  public final static native void ConfigurationCallback_knownDevicesChanged(long jarg1, ConfigurationCallback jarg1_, String jarg2, long jarg3, StringMap jarg3_);
  public final static native void ConfigurationCallback_knownDevicesChangedSwigExplicitConfigurationCallback(long jarg1, ConfigurationCallback jarg1_, String jarg2, long jarg3, StringMap jarg3_);
  public final static native void ConfigurationCallback_exportOnRingEnded(long jarg1, ConfigurationCallback jarg1_, String jarg2, int jarg3, String jarg4);
  public final static native void ConfigurationCallback_exportOnRingEndedSwigExplicitConfigurationCallback(long jarg1, ConfigurationCallback jarg1_, String jarg2, int jarg3, String jarg4);
  public final static native void ConfigurationCallback_incomingTrustRequest(long jarg1, ConfigurationCallback jarg1_, String jarg2, String jarg3, String jarg4, long jarg5, Blob jarg5_, long jarg6);
  public final static native void ConfigurationCallback_incomingTrustRequestSwigExplicitConfigurationCallback(long jarg1, ConfigurationCallback jarg1_, String jarg2, String jarg3, String jarg4, long jarg5, Blob jarg5_, long jarg6);
  public final static native void ConfigurationCallback_contactAdded(long jarg1, ConfigurationCallback jarg1_, String jarg2, String jarg3, boolean jarg4);
  public final static native void ConfigurationCallback_contactAddedSwigExplicitConfigurationCallback(long jarg1, ConfigurationCallback jarg1_, String jarg2, String jarg3, boolean jarg4);
  public final static native void ConfigurationCallback_contactRemoved(long jarg1, ConfigurationCallback jarg1_, String jarg2, String jarg3, boolean jarg4);
  public final static native void ConfigurationCallback_contactRemovedSwigExplicitConfigurationCallback(long jarg1, ConfigurationCallback jarg1_, String jarg2, String jarg3, boolean jarg4);
  public final static native void ConfigurationCallback_certificatePinned(long jarg1, ConfigurationCallback jarg1_, String jarg2);
  public final static native void ConfigurationCallback_certificatePinnedSwigExplicitConfigurationCallback(long jarg1, ConfigurationCallback jarg1_, String jarg2);
  public final static native void ConfigurationCallback_certificatePathPinned(long jarg1, ConfigurationCallback jarg1_, String jarg2, long jarg3, StringVect jarg3_);
  public final static native void ConfigurationCallback_certificatePathPinnedSwigExplicitConfigurationCallback(long jarg1, ConfigurationCallback jarg1_, String jarg2, long jarg3, StringVect jarg3_);
  public final static native void ConfigurationCallback_certificateExpired(long jarg1, ConfigurationCallback jarg1_, String jarg2);
  public final static native void ConfigurationCallback_certificateExpiredSwigExplicitConfigurationCallback(long jarg1, ConfigurationCallback jarg1_, String jarg2);
  public final static native void ConfigurationCallback_certificateStateChanged(long jarg1, ConfigurationCallback jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native void ConfigurationCallback_certificateStateChangedSwigExplicitConfigurationCallback(long jarg1, ConfigurationCallback jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native void ConfigurationCallback_errorAlert(long jarg1, ConfigurationCallback jarg1_, int jarg2);
  public final static native void ConfigurationCallback_errorAlertSwigExplicitConfigurationCallback(long jarg1, ConfigurationCallback jarg1_, int jarg2);
  public final static native void ConfigurationCallback_getHardwareAudioFormat(long jarg1, ConfigurationCallback jarg1_, long jarg2, IntVect jarg2_);
  public final static native void ConfigurationCallback_getHardwareAudioFormatSwigExplicitConfigurationCallback(long jarg1, ConfigurationCallback jarg1_, long jarg2, IntVect jarg2_);
  public final static native void ConfigurationCallback_getAppDataPath(long jarg1, ConfigurationCallback jarg1_, String jarg2, long jarg3, StringVect jarg3_);
  public final static native void ConfigurationCallback_getAppDataPathSwigExplicitConfigurationCallback(long jarg1, ConfigurationCallback jarg1_, String jarg2, long jarg3, StringVect jarg3_);
  public final static native void ConfigurationCallback_getDeviceName(long jarg1, ConfigurationCallback jarg1_, long jarg2, StringVect jarg2_);
  public final static native void ConfigurationCallback_getDeviceNameSwigExplicitConfigurationCallback(long jarg1, ConfigurationCallback jarg1_, long jarg2, StringVect jarg2_);
  public final static native void ConfigurationCallback_nameRegistrationEnded(long jarg1, ConfigurationCallback jarg1_, String jarg2, int jarg3, String jarg4);
  public final static native void ConfigurationCallback_nameRegistrationEndedSwigExplicitConfigurationCallback(long jarg1, ConfigurationCallback jarg1_, String jarg2, int jarg3, String jarg4);
  public final static native void ConfigurationCallback_registeredNameFound(long jarg1, ConfigurationCallback jarg1_, String jarg2, int jarg3, String jarg4, String jarg5);
  public final static native void ConfigurationCallback_registeredNameFoundSwigExplicitConfigurationCallback(long jarg1, ConfigurationCallback jarg1_, String jarg2, int jarg3, String jarg4, String jarg5);
  public final static native void ConfigurationCallback_userSearchEnded(long jarg1, ConfigurationCallback jarg1_, String jarg2, int jarg3, String jarg4, long jarg5, VectMap jarg5_);
  public final static native void ConfigurationCallback_userSearchEndedSwigExplicitConfigurationCallback(long jarg1, ConfigurationCallback jarg1_, String jarg2, int jarg3, String jarg4, long jarg5, VectMap jarg5_);
  public final static native void ConfigurationCallback_migrationEnded(long jarg1, ConfigurationCallback jarg1_, String jarg2, String jarg3);
  public final static native void ConfigurationCallback_migrationEndedSwigExplicitConfigurationCallback(long jarg1, ConfigurationCallback jarg1_, String jarg2, String jarg3);
  public final static native void ConfigurationCallback_deviceRevocationEnded(long jarg1, ConfigurationCallback jarg1_, String jarg2, String jarg3, int jarg4);
  public final static native void ConfigurationCallback_deviceRevocationEndedSwigExplicitConfigurationCallback(long jarg1, ConfigurationCallback jarg1_, String jarg2, String jarg3, int jarg4);
  public final static native void ConfigurationCallback_accountProfileReceived(long jarg1, ConfigurationCallback jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native void ConfigurationCallback_accountProfileReceivedSwigExplicitConfigurationCallback(long jarg1, ConfigurationCallback jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native void ConfigurationCallback_hardwareDecodingChanged(long jarg1, ConfigurationCallback jarg1_, boolean jarg2);
  public final static native void ConfigurationCallback_hardwareDecodingChangedSwigExplicitConfigurationCallback(long jarg1, ConfigurationCallback jarg1_, boolean jarg2);
  public final static native void ConfigurationCallback_hardwareEncodingChanged(long jarg1, ConfigurationCallback jarg1_, boolean jarg2);
  public final static native void ConfigurationCallback_hardwareEncodingChangedSwigExplicitConfigurationCallback(long jarg1, ConfigurationCallback jarg1_, boolean jarg2);
  public final static native void ConfigurationCallback_audioMeter(long jarg1, ConfigurationCallback jarg1_, String jarg2, float jarg3);
  public final static native void ConfigurationCallback_audioMeterSwigExplicitConfigurationCallback(long jarg1, ConfigurationCallback jarg1_, String jarg2, float jarg3);
  public final static native void ConfigurationCallback_messageSend(long jarg1, ConfigurationCallback jarg1_, String jarg2);
  public final static native void ConfigurationCallback_messageSendSwigExplicitConfigurationCallback(long jarg1, ConfigurationCallback jarg1_, String jarg2);
  public final static native long new_ConfigurationCallback();
  public final static native void ConfigurationCallback_director_connect(ConfigurationCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void ConfigurationCallback_change_ownership(ConfigurationCallback obj, long cptr, boolean take_or_release);
  public final static native void DataTransferInfo_accountId_set(long jarg1, DataTransferInfo jarg1_, String jarg2);
  public final static native String DataTransferInfo_accountId_get(long jarg1, DataTransferInfo jarg1_);
  public final static native void DataTransferInfo_lastEvent_set(long jarg1, DataTransferInfo jarg1_, long jarg2);
  public final static native long DataTransferInfo_lastEvent_get(long jarg1, DataTransferInfo jarg1_);
  public final static native void DataTransferInfo_flags_set(long jarg1, DataTransferInfo jarg1_, long jarg2);
  public final static native long DataTransferInfo_flags_get(long jarg1, DataTransferInfo jarg1_);
  public final static native void DataTransferInfo_totalSize_set(long jarg1, DataTransferInfo jarg1_, long jarg2);
  public final static native long DataTransferInfo_totalSize_get(long jarg1, DataTransferInfo jarg1_);
  public final static native void DataTransferInfo_bytesProgress_set(long jarg1, DataTransferInfo jarg1_, long jarg2);
  public final static native long DataTransferInfo_bytesProgress_get(long jarg1, DataTransferInfo jarg1_);
  public final static native void DataTransferInfo_author_set(long jarg1, DataTransferInfo jarg1_, String jarg2);
  public final static native String DataTransferInfo_author_get(long jarg1, DataTransferInfo jarg1_);
  public final static native void DataTransferInfo_peer_set(long jarg1, DataTransferInfo jarg1_, String jarg2);
  public final static native String DataTransferInfo_peer_get(long jarg1, DataTransferInfo jarg1_);
  public final static native void DataTransferInfo_conversationId_set(long jarg1, DataTransferInfo jarg1_, String jarg2);
  public final static native String DataTransferInfo_conversationId_get(long jarg1, DataTransferInfo jarg1_);
  public final static native void DataTransferInfo_displayName_set(long jarg1, DataTransferInfo jarg1_, String jarg2);
  public final static native String DataTransferInfo_displayName_get(long jarg1, DataTransferInfo jarg1_);
  public final static native void DataTransferInfo_path_set(long jarg1, DataTransferInfo jarg1_, String jarg2);
  public final static native String DataTransferInfo_path_get(long jarg1, DataTransferInfo jarg1_);
  public final static native void DataTransferInfo_mimetype_set(long jarg1, DataTransferInfo jarg1_, String jarg2);
  public final static native String DataTransferInfo_mimetype_get(long jarg1, DataTransferInfo jarg1_);
  public final static native long new_DataTransferInfo();
  public final static native void delete_DataTransferInfo(long jarg1);
  public final static native void sendFile(String jarg1, String jarg2, String jarg3, String jarg4, String jarg5);
  public final static native long sendFileLegacy(long jarg1, DataTransferInfo jarg1_, long[] jarg2);
  public final static native long acceptFileTransfer(String jarg1, String jarg2, String jarg3);
  public final static native long downloadFile(String jarg1, String jarg2, String jarg3, String jarg4, String jarg5);
  public final static native long cancelDataTransfer(String jarg1, String jarg2, String jarg3);
  public final static native long dataTransferInfo(String jarg1, String jarg2, long jarg3, DataTransferInfo jarg3_);
  public final static native long fileTransferInfo(String jarg1, String jarg2, String jarg3, String[] jarg4, long[] jarg5, long[] jarg6);
  public final static native void delete_DataTransferCallback(long jarg1);
  public final static native void DataTransferCallback_dataTransferEvent(long jarg1, DataTransferCallback jarg1_, String jarg2, String jarg3, String jarg4, String jarg5, int jarg6);
  public final static native void DataTransferCallback_dataTransferEventSwigExplicitDataTransferCallback(long jarg1, DataTransferCallback jarg1_, String jarg2, String jarg3, String jarg4, String jarg5, int jarg6);
  public final static native long new_DataTransferCallback();
  public final static native void DataTransferCallback_director_connect(DataTransferCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void DataTransferCallback_change_ownership(DataTransferCallback obj, long cptr, boolean take_or_release);
  public final static native void publish(String jarg1, boolean jarg2, String jarg3);
  public final static native void answerServerRequest(String jarg1, boolean jarg2);
  public final static native void subscribeBuddy(String jarg1, String jarg2, boolean jarg3);
  public final static native long getSubscriptions(String jarg1);
  public final static native void setSubscriptions(String jarg1, long jarg2, StringVect jarg2_);
  public final static native void delete_PresenceCallback(long jarg1);
  public final static native void PresenceCallback_newServerSubscriptionRequest(long jarg1, PresenceCallback jarg1_, String jarg2);
  public final static native void PresenceCallback_newServerSubscriptionRequestSwigExplicitPresenceCallback(long jarg1, PresenceCallback jarg1_, String jarg2);
  public final static native void PresenceCallback_serverError(long jarg1, PresenceCallback jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native void PresenceCallback_serverErrorSwigExplicitPresenceCallback(long jarg1, PresenceCallback jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native void PresenceCallback_newBuddyNotification(long jarg1, PresenceCallback jarg1_, String jarg2, String jarg3, int jarg4, String jarg5);
  public final static native void PresenceCallback_newBuddyNotificationSwigExplicitPresenceCallback(long jarg1, PresenceCallback jarg1_, String jarg2, String jarg3, int jarg4, String jarg5);
  public final static native void PresenceCallback_nearbyPeerNotification(long jarg1, PresenceCallback jarg1_, String jarg2, String jarg3, int jarg4, String jarg5);
  public final static native void PresenceCallback_nearbyPeerNotificationSwigExplicitPresenceCallback(long jarg1, PresenceCallback jarg1_, String jarg2, String jarg3, int jarg4, String jarg5);
  public final static native void PresenceCallback_subscriptionStateChanged(long jarg1, PresenceCallback jarg1_, String jarg2, String jarg3, int jarg4);
  public final static native void PresenceCallback_subscriptionStateChangedSwigExplicitPresenceCallback(long jarg1, PresenceCallback jarg1_, String jarg2, String jarg3, int jarg4);
  public final static native long new_PresenceCallback();
  public final static native void PresenceCallback_director_connect(PresenceCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void PresenceCallback_change_ownership(PresenceCallback obj, long cptr, boolean take_or_release);
  public final static native void setVideoFrame(byte[] jarg1, int jarg2, long jarg3, int jarg4, int jarg5, int jarg6);
  public final static native long acquireNativeWindow(java.lang.Object jarg1);
  public final static native void releaseNativeWindow(long jarg1);
  public final static native void setNativeWindowGeometry(long jarg1, int jarg2, int jarg3);
  public final static native void registerVideoCallback(String jarg1, long jarg2);
  public final static native void unregisterVideoCallback(String jarg1, long jarg2);
  public final static native void captureVideoFrame(java.lang.Object jarg1, int jarg2);
  public final static native void captureVideoPacket(java.lang.Object jarg1, int jarg2, int jarg3, boolean jarg4, long jarg5, int jarg6);
  public final static native void setDefaultDevice(String jarg1);
  public final static native String getDefaultDevice();
  public final static native void startCamera();
  public final static native void stopCamera();
  public final static native boolean hasCameraStarted();
  public final static native void startAudioDevice();
  public final static native void stopAudioDevice();
  public final static native boolean switchInput__SWIG_1(String jarg1);
  public final static native boolean switchToCamera();
  public final static native long getSettings(String jarg1);
  public final static native void applySettings(String jarg1, long jarg2, StringMap jarg2_);
  public final static native void addVideoDevice(String jarg1);
  public final static native void removeVideoDevice(String jarg1);
  public final static native void setDeviceOrientation(String jarg1, int jarg2);
  public final static native void registerSinkTarget(String jarg1, long jarg2);
  public final static native String startLocalRecorder(boolean jarg1, String jarg2);
  public final static native void stopLocalRecorder(String jarg1);
  public final static native boolean getDecodingAccelerated();
  public final static native void setDecodingAccelerated(boolean jarg1);
  public final static native boolean getEncodingAccelerated();
  public final static native void setEncodingAccelerated(boolean jarg1);
  public final static native void delete_VideoCallback(long jarg1);
  public final static native void VideoCallback_getCameraInfo(long jarg1, VideoCallback jarg1_, String jarg2, long jarg3, IntVect jarg3_, long jarg4, UintVect jarg4_, long jarg5, UintVect jarg5_);
  public final static native void VideoCallback_getCameraInfoSwigExplicitVideoCallback(long jarg1, VideoCallback jarg1_, String jarg2, long jarg3, IntVect jarg3_, long jarg4, UintVect jarg4_, long jarg5, UintVect jarg5_);
  public final static native void VideoCallback_setParameters(long jarg1, VideoCallback jarg1_, String jarg2, int jarg3, int jarg4, int jarg5, int jarg6);
  public final static native void VideoCallback_setParametersSwigExplicitVideoCallback(long jarg1, VideoCallback jarg1_, String jarg2, int jarg3, int jarg4, int jarg5, int jarg6);
  public final static native void VideoCallback_setBitrate(long jarg1, VideoCallback jarg1_, String jarg2, int jarg3);
  public final static native void VideoCallback_setBitrateSwigExplicitVideoCallback(long jarg1, VideoCallback jarg1_, String jarg2, int jarg3);
  public final static native void VideoCallback_requestKeyFrame(long jarg1, VideoCallback jarg1_);
  public final static native void VideoCallback_requestKeyFrameSwigExplicitVideoCallback(long jarg1, VideoCallback jarg1_);
  public final static native void VideoCallback_startCapture(long jarg1, VideoCallback jarg1_, String jarg2);
  public final static native void VideoCallback_startCaptureSwigExplicitVideoCallback(long jarg1, VideoCallback jarg1_, String jarg2);
  public final static native void VideoCallback_stopCapture(long jarg1, VideoCallback jarg1_);
  public final static native void VideoCallback_stopCaptureSwigExplicitVideoCallback(long jarg1, VideoCallback jarg1_);
  public final static native void VideoCallback_decodingStarted(long jarg1, VideoCallback jarg1_, String jarg2, String jarg3, int jarg4, int jarg5, boolean jarg6);
  public final static native void VideoCallback_decodingStartedSwigExplicitVideoCallback(long jarg1, VideoCallback jarg1_, String jarg2, String jarg3, int jarg4, int jarg5, boolean jarg6);
  public final static native void VideoCallback_decodingStopped(long jarg1, VideoCallback jarg1_, String jarg2, String jarg3, boolean jarg4);
  public final static native void VideoCallback_decodingStoppedSwigExplicitVideoCallback(long jarg1, VideoCallback jarg1_, String jarg2, String jarg3, boolean jarg4);
  public final static native long new_VideoCallback();
  public final static native void VideoCallback_director_connect(VideoCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void VideoCallback_change_ownership(VideoCallback obj, long cptr, boolean take_or_release);
  public final static native boolean loadPlugin(String jarg1);
  public final static native boolean unloadPlugin(String jarg1);
  public final static native long getPluginDetails(String jarg1);
  public final static native long getPluginPreferences(String jarg1);
  public final static native boolean setPluginPreference(String jarg1, String jarg2, String jarg3);
  public final static native long getPluginPreferencesValues(String jarg1);
  public final static native boolean resetPluginPreferencesValues(String jarg1);
  public final static native long getInstalledPlugins();
  public final static native long getLoadedPlugins();
  public final static native int installPlugin(String jarg1, boolean jarg2);
  public final static native int uninstallPlugin(String jarg1);
  public final static native long getCallMediaHandlers();
  public final static native long getChatHandlers();
  public final static native void toggleCallMediaHandler(String jarg1, String jarg2, boolean jarg3);
  public final static native void toggleChatHandler(String jarg1, String jarg2, String jarg3, boolean jarg4);
  public final static native long getCallMediaHandlerDetails(String jarg1);
  public final static native long getCallMediaHandlerStatus(String jarg1);
  public final static native long getChatHandlerDetails(String jarg1);
  public final static native long getChatHandlerStatus(String jarg1, String jarg2);
  public final static native boolean getPluginsEnabled();
  public final static native void setPluginsEnabled(boolean jarg1);
  public final static native String startConversation(String jarg1);
  public final static native void acceptConversationRequest(String jarg1, String jarg2);
  public final static native void declineConversationRequest(String jarg1, String jarg2);
  public final static native boolean removeConversation(String jarg1, String jarg2);
  public final static native long getConversations(String jarg1);
  public final static native long getConversationRequests(String jarg1);
  public final static native void updateConversationInfos(String jarg1, String jarg2, long jarg3, StringMap jarg3_);
  public final static native long conversationInfos(String jarg1, String jarg2);
  public final static native void addConversationMember(String jarg1, String jarg2, String jarg3);
  public final static native void removeConversationMember(String jarg1, String jarg2, String jarg3);
  public final static native long getConversationMembers(String jarg1, String jarg2);
  public final static native void sendMessage(String jarg1, String jarg2, String jarg3, String jarg4);
  public final static native long loadConversationMessages(String jarg1, String jarg2, String jarg3, long jarg4);
  public final static native long countInteractions(String jarg1, String jarg2, String jarg3, String jarg4, String jarg5);
  public final static native void delete_ConversationCallback(long jarg1);
  public final static native void ConversationCallback_conversationLoaded(long jarg1, ConversationCallback jarg1_, long jarg2, String jarg3, String jarg4, long jarg5, VectMap jarg5_);
  public final static native void ConversationCallback_conversationLoadedSwigExplicitConversationCallback(long jarg1, ConversationCallback jarg1_, long jarg2, String jarg3, String jarg4, long jarg5, VectMap jarg5_);
  public final static native void ConversationCallback_messageReceived(long jarg1, ConversationCallback jarg1_, String jarg2, String jarg3, long jarg4, StringMap jarg4_);
  public final static native void ConversationCallback_messageReceivedSwigExplicitConversationCallback(long jarg1, ConversationCallback jarg1_, String jarg2, String jarg3, long jarg4, StringMap jarg4_);
  public final static native void ConversationCallback_conversationRequestReceived(long jarg1, ConversationCallback jarg1_, String jarg2, String jarg3, long jarg4, StringMap jarg4_);
  public final static native void ConversationCallback_conversationRequestReceivedSwigExplicitConversationCallback(long jarg1, ConversationCallback jarg1_, String jarg2, String jarg3, long jarg4, StringMap jarg4_);
  public final static native void ConversationCallback_conversationRequestDeclined(long jarg1, ConversationCallback jarg1_, String jarg2, String jarg3);
  public final static native void ConversationCallback_conversationRequestDeclinedSwigExplicitConversationCallback(long jarg1, ConversationCallback jarg1_, String jarg2, String jarg3);
  public final static native void ConversationCallback_conversationReady(long jarg1, ConversationCallback jarg1_, String jarg2, String jarg3);
  public final static native void ConversationCallback_conversationReadySwigExplicitConversationCallback(long jarg1, ConversationCallback jarg1_, String jarg2, String jarg3);
  public final static native void ConversationCallback_conversationRemoved(long jarg1, ConversationCallback jarg1_, String jarg2, String jarg3);
  public final static native void ConversationCallback_conversationRemovedSwigExplicitConversationCallback(long jarg1, ConversationCallback jarg1_, String jarg2, String jarg3);
  public final static native void ConversationCallback_conversationMemberEvent(long jarg1, ConversationCallback jarg1_, String jarg2, String jarg3, String jarg4, int jarg5);
  public final static native void ConversationCallback_conversationMemberEventSwigExplicitConversationCallback(long jarg1, ConversationCallback jarg1_, String jarg2, String jarg3, String jarg4, int jarg5);
  public final static native void ConversationCallback_onConversationError(long jarg1, ConversationCallback jarg1_, String jarg2, String jarg3, long jarg4, String jarg5);
  public final static native void ConversationCallback_onConversationErrorSwigExplicitConversationCallback(long jarg1, ConversationCallback jarg1_, String jarg2, String jarg3, long jarg4, String jarg5);
  public final static native long new_ConversationCallback();
  public final static native void ConversationCallback_director_connect(ConversationCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void ConversationCallback_change_ownership(ConversationCallback obj, long cptr, boolean take_or_release);
  public final static native void init(long jarg1, ConfigurationCallback jarg1_, long jarg2, Callback jarg2_, long jarg3, PresenceCallback jarg3_, long jarg4, DataTransferCallback jarg4_, long jarg5, VideoCallback jarg5_, long jarg6, ConversationCallback jarg6_);

  public static void SwigDirector_Callback_callStateChanged(Callback jself, String call_id, String state, int detail_code) {
    jself.callStateChanged(call_id, state, detail_code);
  }
  public static void SwigDirector_Callback_transferFailed(Callback jself) {
    jself.transferFailed();
  }
  public static void SwigDirector_Callback_transferSucceeded(Callback jself) {
    jself.transferSucceeded();
  }
  public static void SwigDirector_Callback_recordPlaybackStopped(Callback jself, String path) {
    jself.recordPlaybackStopped(path);
  }
  public static void SwigDirector_Callback_voiceMailNotify(Callback jself, String accountId, int newCount, int oldCount, int urgentCount) {
    jself.voiceMailNotify(accountId, newCount, oldCount, urgentCount);
  }
  public static void SwigDirector_Callback_incomingMessage(Callback jself, String id, String from, long messages) {
    jself.incomingMessage(id, from, new StringMap(messages, false));
  }
  public static void SwigDirector_Callback_incomingCall(Callback jself, String account_id, String call_id, String from) {
    jself.incomingCall(account_id, call_id, from);
  }
  public static void SwigDirector_Callback_incomingCallWithMedia(Callback jself, String account_id, String call_id, String from, long mediaList) {
    jself.incomingCallWithMedia(account_id, call_id, from, new VectMap(mediaList, false));
  }
  public static void SwigDirector_Callback_mediaChangeRequested(Callback jself, String account_id, String call_id, long mediaList) {
    jself.mediaChangeRequested(account_id, call_id, new VectMap(mediaList, false));
  }
  public static void SwigDirector_Callback_recordPlaybackFilepath(Callback jself, String id, String filename) {
    jself.recordPlaybackFilepath(id, filename);
  }
  public static void SwigDirector_Callback_conferenceCreated(Callback jself, String conf_id) {
    jself.conferenceCreated(conf_id);
  }
  public static void SwigDirector_Callback_conferenceChanged(Callback jself, String conf_id, String state) {
    jself.conferenceChanged(conf_id, state);
  }
  public static void SwigDirector_Callback_conferenceRemoved(Callback jself, String conf_id) {
    jself.conferenceRemoved(conf_id);
  }
  public static void SwigDirector_Callback_updatePlaybackScale(Callback jself, String filepath, int position, int scale) {
    jself.updatePlaybackScale(filepath, position, scale);
  }
  public static void SwigDirector_Callback_newCall(Callback jself, String account_id, String call_id, String to) {
    jself.newCall(account_id, call_id, to);
  }
  public static void SwigDirector_Callback_sipCallStateChange(Callback jself, String call_id, String state, int code) {
    jself.sipCallStateChange(call_id, state, code);
  }
  public static void SwigDirector_Callback_recordingStateChanged(Callback jself, String call_id, int code) {
    jself.recordingStateChanged(call_id, code);
  }
  public static void SwigDirector_Callback_recordStateChange(Callback jself, String call_id, int state) {
    jself.recordStateChange(call_id, state);
  }
  public static void SwigDirector_Callback_onRtcpReportReceived(Callback jself, String call_id, long stats) {
    jself.onRtcpReportReceived(call_id, new IntegerMap(stats, false));
  }
  public static void SwigDirector_Callback_onConferenceInfosUpdated(Callback jself, String confId, long infos) {
    jself.onConferenceInfosUpdated(confId, new VectMap(infos, false));
  }
  public static void SwigDirector_Callback_peerHold(Callback jself, String call_id, boolean holding) {
    jself.peerHold(call_id, holding);
  }
  public static void SwigDirector_Callback_connectionUpdate(Callback jself, String id, int state) {
    jself.connectionUpdate(id, state);
  }
  public static void SwigDirector_Callback_remoteRecordingChanged(Callback jself, String call_id, String peer_number, boolean state) {
    jself.remoteRecordingChanged(call_id, peer_number, state);
  }
  public static void SwigDirector_Callback_mediaNegotiationStatus(Callback jself, String call_id, String event, long mediaList) {
    jself.mediaNegotiationStatus(call_id, event, new VectMap(mediaList, false));
  }
  public static void SwigDirector_ConfigurationCallback_volumeChanged(ConfigurationCallback jself, String device, int value) {
    jself.volumeChanged(device, value);
  }
  public static void SwigDirector_ConfigurationCallback_accountsChanged(ConfigurationCallback jself) {
    jself.accountsChanged();
  }
  public static void SwigDirector_ConfigurationCallback_historyChanged(ConfigurationCallback jself) {
    jself.historyChanged();
  }
  public static void SwigDirector_ConfigurationCallback_stunStatusFailure(ConfigurationCallback jself, String account_id) {
    jself.stunStatusFailure(account_id);
  }
  public static void SwigDirector_ConfigurationCallback_accountDetailsChanged(ConfigurationCallback jself, String account_id, long details) {
    jself.accountDetailsChanged(account_id, new StringMap(details, false));
  }
  public static void SwigDirector_ConfigurationCallback_profileReceived(ConfigurationCallback jself, String arg0, String arg1, String arg2) {
    jself.profileReceived(arg0, arg1, arg2);
  }
  public static void SwigDirector_ConfigurationCallback_registrationStateChanged(ConfigurationCallback jself, String account_id, String state, int code, String detail_str) {
    jself.registrationStateChanged(account_id, state, code, detail_str);
  }
  public static void SwigDirector_ConfigurationCallback_volatileAccountDetailsChanged(ConfigurationCallback jself, String account_id, long details) {
    jself.volatileAccountDetailsChanged(account_id, new StringMap(details, false));
  }
  public static void SwigDirector_ConfigurationCallback_incomingAccountMessage(ConfigurationCallback jself, String arg0, String arg1, String arg2, long arg3) {
    jself.incomingAccountMessage(arg0, arg1, arg2, new StringMap(arg3, false));
  }
  public static void SwigDirector_ConfigurationCallback_accountMessageStatusChanged(ConfigurationCallback jself, String arg0, String arg1, String arg2, String arg3, int arg4) {
    jself.accountMessageStatusChanged(arg0, arg1, arg2, arg3, arg4);
  }
  public static void SwigDirector_ConfigurationCallback_composingStatusChanged(ConfigurationCallback jself, String arg0, String arg1, String arg2, int arg3) {
    jself.composingStatusChanged(arg0, arg1, arg2, arg3);
  }
  public static void SwigDirector_ConfigurationCallback_knownDevicesChanged(ConfigurationCallback jself, String arg0, long arg1) {
    jself.knownDevicesChanged(arg0, new StringMap(arg1, false));
  }
  public static void SwigDirector_ConfigurationCallback_exportOnRingEnded(ConfigurationCallback jself, String arg0, int arg1, String arg2) {
    jself.exportOnRingEnded(arg0, arg1, arg2);
  }
  public static void SwigDirector_ConfigurationCallback_incomingTrustRequest(ConfigurationCallback jself, String arg0, String arg1, String arg2, long arg3, long received) {
    jself.incomingTrustRequest(arg0, arg1, arg2, new Blob(arg3, false), received);
  }
  public static void SwigDirector_ConfigurationCallback_contactAdded(ConfigurationCallback jself, String arg0, String arg1, boolean confirmed) {
    jself.contactAdded(arg0, arg1, confirmed);
  }
  public static void SwigDirector_ConfigurationCallback_contactRemoved(ConfigurationCallback jself, String arg0, String arg1, boolean banned) {
    jself.contactRemoved(arg0, arg1, banned);
  }
  public static void SwigDirector_ConfigurationCallback_certificatePinned(ConfigurationCallback jself, String arg0) {
    jself.certificatePinned(arg0);
  }
  public static void SwigDirector_ConfigurationCallback_certificatePathPinned(ConfigurationCallback jself, String arg0, long arg1) {
    jself.certificatePathPinned(arg0, new StringVect(arg1, false));
  }
  public static void SwigDirector_ConfigurationCallback_certificateExpired(ConfigurationCallback jself, String arg0) {
    jself.certificateExpired(arg0);
  }
  public static void SwigDirector_ConfigurationCallback_certificateStateChanged(ConfigurationCallback jself, String arg0, String arg1, String arg2) {
    jself.certificateStateChanged(arg0, arg1, arg2);
  }
  public static void SwigDirector_ConfigurationCallback_errorAlert(ConfigurationCallback jself, int alert) {
    jself.errorAlert(alert);
  }
  public static void SwigDirector_ConfigurationCallback_getHardwareAudioFormat(ConfigurationCallback jself, long arg0) {
    jself.getHardwareAudioFormat((arg0 == 0) ? null : new IntVect(arg0, false));
  }
  public static void SwigDirector_ConfigurationCallback_getAppDataPath(ConfigurationCallback jself, String arg0, long arg1) {
    jself.getAppDataPath(arg0, (arg1 == 0) ? null : new StringVect(arg1, false));
  }
  public static void SwigDirector_ConfigurationCallback_getDeviceName(ConfigurationCallback jself, long arg0) {
    jself.getDeviceName((arg0 == 0) ? null : new StringVect(arg0, false));
  }
  public static void SwigDirector_ConfigurationCallback_nameRegistrationEnded(ConfigurationCallback jself, String arg0, int state, String arg2) {
    jself.nameRegistrationEnded(arg0, state, arg2);
  }
  public static void SwigDirector_ConfigurationCallback_registeredNameFound(ConfigurationCallback jself, String arg0, int state, String arg2, String arg3) {
    jself.registeredNameFound(arg0, state, arg2, arg3);
  }
  public static void SwigDirector_ConfigurationCallback_userSearchEnded(ConfigurationCallback jself, String arg0, int state, String arg2, long arg3) {
    jself.userSearchEnded(arg0, state, arg2, new VectMap(arg3, false));
  }
  public static void SwigDirector_ConfigurationCallback_migrationEnded(ConfigurationCallback jself, String arg0, String arg1) {
    jself.migrationEnded(arg0, arg1);
  }
  public static void SwigDirector_ConfigurationCallback_deviceRevocationEnded(ConfigurationCallback jself, String arg0, String arg1, int arg2) {
    jself.deviceRevocationEnded(arg0, arg1, arg2);
  }
  public static void SwigDirector_ConfigurationCallback_accountProfileReceived(ConfigurationCallback jself, String arg0, String arg1, String arg2) {
    jself.accountProfileReceived(arg0, arg1, arg2);
  }
  public static void SwigDirector_ConfigurationCallback_hardwareDecodingChanged(ConfigurationCallback jself, boolean arg0) {
    jself.hardwareDecodingChanged(arg0);
  }
  public static void SwigDirector_ConfigurationCallback_hardwareEncodingChanged(ConfigurationCallback jself, boolean arg0) {
    jself.hardwareEncodingChanged(arg0);
  }
  public static void SwigDirector_ConfigurationCallback_audioMeter(ConfigurationCallback jself, String arg0, float arg1) {
    jself.audioMeter(arg0, arg1);
  }
  public static void SwigDirector_ConfigurationCallback_messageSend(ConfigurationCallback jself, String arg0) {
    jself.messageSend(arg0);
  }
  public static void SwigDirector_DataTransferCallback_dataTransferEvent(DataTransferCallback jself, String accountId, String conversationId, String interactionId, String fileId, int eventCode) {
    jself.dataTransferEvent(accountId, conversationId, interactionId, fileId, eventCode);
  }
  public static void SwigDirector_PresenceCallback_newServerSubscriptionRequest(PresenceCallback jself, String arg0) {
    jself.newServerSubscriptionRequest(arg0);
  }
  public static void SwigDirector_PresenceCallback_serverError(PresenceCallback jself, String arg0, String arg1, String arg2) {
    jself.serverError(arg0, arg1, arg2);
  }
  public static void SwigDirector_PresenceCallback_newBuddyNotification(PresenceCallback jself, String arg0, String arg1, int arg2, String arg3) {
    jself.newBuddyNotification(arg0, arg1, arg2, arg3);
  }
  public static void SwigDirector_PresenceCallback_nearbyPeerNotification(PresenceCallback jself, String arg0, String arg1, int arg2, String arg3) {
    jself.nearbyPeerNotification(arg0, arg1, arg2, arg3);
  }
  public static void SwigDirector_PresenceCallback_subscriptionStateChanged(PresenceCallback jself, String arg0, String arg1, int arg2) {
    jself.subscriptionStateChanged(arg0, arg1, arg2);
  }
  public static void SwigDirector_VideoCallback_getCameraInfo(VideoCallback jself, String device, long formats, long sizes, long rates) {
    jself.getCameraInfo(device, (formats == 0) ? null : new IntVect(formats, false), (sizes == 0) ? null : new UintVect(sizes, false), (rates == 0) ? null : new UintVect(rates, false));
  }
  public static void SwigDirector_VideoCallback_setParameters(VideoCallback jself, String arg0, int format, int width, int height, int rate) {
    jself.setParameters(arg0, format, width, height, rate);
  }
  public static void SwigDirector_VideoCallback_setBitrate(VideoCallback jself, String arg0, int bitrate) {
    jself.setBitrate(arg0, bitrate);
  }
  public static void SwigDirector_VideoCallback_requestKeyFrame(VideoCallback jself) {
    jself.requestKeyFrame();
  }
  public static void SwigDirector_VideoCallback_startCapture(VideoCallback jself, String camid) {
    jself.startCapture(camid);
  }
  public static void SwigDirector_VideoCallback_stopCapture(VideoCallback jself) {
    jself.stopCapture();
  }
  public static void SwigDirector_VideoCallback_decodingStarted(VideoCallback jself, String id, String shm_path, int w, int h, boolean is_mixer) {
    jself.decodingStarted(id, shm_path, w, h, is_mixer);
  }
  public static void SwigDirector_VideoCallback_decodingStopped(VideoCallback jself, String id, String shm_path, boolean is_mixer) {
    jself.decodingStopped(id, shm_path, is_mixer);
  }
  public static void SwigDirector_ConversationCallback_conversationLoaded(ConversationCallback jself, long arg0, String arg1, String arg2, long arg3) {
    jself.conversationLoaded(arg0, arg1, arg2, new VectMap(arg3, true));
  }
  public static void SwigDirector_ConversationCallback_messageReceived(ConversationCallback jself, String arg0, String arg1, long arg2) {
    jself.messageReceived(arg0, arg1, new StringMap(arg2, true));
  }
  public static void SwigDirector_ConversationCallback_conversationRequestReceived(ConversationCallback jself, String arg0, String arg1, long arg2) {
    jself.conversationRequestReceived(arg0, arg1, new StringMap(arg2, true));
  }
  public static void SwigDirector_ConversationCallback_conversationRequestDeclined(ConversationCallback jself, String arg0, String arg1) {
    jself.conversationRequestDeclined(arg0, arg1);
  }
  public static void SwigDirector_ConversationCallback_conversationReady(ConversationCallback jself, String arg0, String arg1) {
    jself.conversationReady(arg0, arg1);
  }
  public static void SwigDirector_ConversationCallback_conversationRemoved(ConversationCallback jself, String arg0, String arg1) {
    jself.conversationRemoved(arg0, arg1);
  }
  public static void SwigDirector_ConversationCallback_conversationMemberEvent(ConversationCallback jself, String arg0, String arg1, String arg2, int arg3) {
    jself.conversationMemberEvent(arg0, arg1, arg2, arg3);
  }
  public static void SwigDirector_ConversationCallback_onConversationError(ConversationCallback jself, String arg0, String arg1, long arg2, String arg3) {
    jself.onConversationError(arg0, arg1, arg2, arg3);
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}
