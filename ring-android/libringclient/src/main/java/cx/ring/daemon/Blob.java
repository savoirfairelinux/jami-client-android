/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package cx.ring.daemon;

public class Blob {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected Blob(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Blob obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RingserviceJNI.delete_Blob(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public static Blob fromString(String in) {
    byte[] dat;
    try {
      dat = in.getBytes("UTF-8");
    } catch (java.io.UnsupportedEncodingException e) {
      dat = in.getBytes();
    }
    Blob n = new Blob(dat.length);
    for (int i=0; i<dat.length; i++) {
      n.set(i, dat[i]);
    }
    return n;
  }
  public String toJavaString() {
    byte[] dat = new byte[(int)size()];
    for (int i=0; i<dat.length; i++) {
        dat[i] = (byte)get(i);
    }
    try {
        return new String(dat, "utf-8");
    } catch (java.io.UnsupportedEncodingException e) {
        return "";
    }
  }

  public Blob() {
    this(RingserviceJNI.new_Blob__SWIG_0(), true);
  }

  public Blob(long n) {
    this(RingserviceJNI.new_Blob__SWIG_1(n), true);
  }

  public long size() {
    return RingserviceJNI.Blob_size(swigCPtr, this);
  }

  public long capacity() {
    return RingserviceJNI.Blob_capacity(swigCPtr, this);
  }

  public void reserve(long n) {
    RingserviceJNI.Blob_reserve(swigCPtr, this, n);
  }

  public boolean isEmpty() {
    return RingserviceJNI.Blob_isEmpty(swigCPtr, this);
  }

  public void clear() {
    RingserviceJNI.Blob_clear(swigCPtr, this);
  }

  public void add(short x) {
    RingserviceJNI.Blob_add(swigCPtr, this, x);
  }

  public short get(int i) {
    return RingserviceJNI.Blob_get(swigCPtr, this, i);
  }

  public void set(int i, short val) {
    RingserviceJNI.Blob_set(swigCPtr, this, i, val);
  }

}
