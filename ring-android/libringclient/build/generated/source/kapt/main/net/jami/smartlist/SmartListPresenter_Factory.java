// Generated by Dagger (https://dagger.dev).
package net.jami.smartlist;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import io.reactivex.rxjava3.core.Scheduler;
import javax.inject.Provider;
import net.jami.services.ConversationFacade;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SmartListPresenter_Factory implements Factory<SmartListPresenter> {
  private final Provider<ConversationFacade> mConversationFacadeProvider;

  private final Provider<Scheduler> mUiSchedulerProvider;

  public SmartListPresenter_Factory(Provider<ConversationFacade> mConversationFacadeProvider,
      Provider<Scheduler> mUiSchedulerProvider) {
    this.mConversationFacadeProvider = mConversationFacadeProvider;
    this.mUiSchedulerProvider = mUiSchedulerProvider;
  }

  @Override
  public SmartListPresenter get() {
    return newInstance(mConversationFacadeProvider.get(), mUiSchedulerProvider.get());
  }

  public static SmartListPresenter_Factory create(
      Provider<ConversationFacade> mConversationFacadeProvider,
      Provider<Scheduler> mUiSchedulerProvider) {
    return new SmartListPresenter_Factory(mConversationFacadeProvider, mUiSchedulerProvider);
  }

  public static SmartListPresenter newInstance(ConversationFacade mConversationFacade,
      Scheduler mUiScheduler) {
    return new SmartListPresenter(mConversationFacade, mUiScheduler);
  }
}
