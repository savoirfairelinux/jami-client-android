// Generated by Dagger (https://dagger.dev).
package net.jami.settings;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import io.reactivex.rxjava3.core.Scheduler;
import javax.inject.Provider;
import net.jami.services.AccountService;
import net.jami.services.DeviceRuntimeService;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MediaPreferencePresenter_Factory implements Factory<MediaPreferencePresenter> {
  private final Provider<AccountService> mAccountServiceProvider;

  private final Provider<DeviceRuntimeService> mDeviceRuntimeServiceProvider;

  private final Provider<Scheduler> mUiSchedulerProvider;

  public MediaPreferencePresenter_Factory(Provider<AccountService> mAccountServiceProvider,
      Provider<DeviceRuntimeService> mDeviceRuntimeServiceProvider,
      Provider<Scheduler> mUiSchedulerProvider) {
    this.mAccountServiceProvider = mAccountServiceProvider;
    this.mDeviceRuntimeServiceProvider = mDeviceRuntimeServiceProvider;
    this.mUiSchedulerProvider = mUiSchedulerProvider;
  }

  @Override
  public MediaPreferencePresenter get() {
    return newInstance(mAccountServiceProvider.get(), mDeviceRuntimeServiceProvider.get(), mUiSchedulerProvider.get());
  }

  public static MediaPreferencePresenter_Factory create(
      Provider<AccountService> mAccountServiceProvider,
      Provider<DeviceRuntimeService> mDeviceRuntimeServiceProvider,
      Provider<Scheduler> mUiSchedulerProvider) {
    return new MediaPreferencePresenter_Factory(mAccountServiceProvider, mDeviceRuntimeServiceProvider, mUiSchedulerProvider);
  }

  public static MediaPreferencePresenter newInstance(AccountService mAccountService,
      DeviceRuntimeService mDeviceRuntimeService, Scheduler mUiScheduler) {
    return new MediaPreferencePresenter(mAccountService, mDeviceRuntimeService, mUiScheduler);
  }
}
