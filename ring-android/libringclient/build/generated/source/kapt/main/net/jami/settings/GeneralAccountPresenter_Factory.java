// Generated by Dagger (https://dagger.dev).
package net.jami.settings;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import io.reactivex.rxjava3.core.Scheduler;
import javax.inject.Provider;
import net.jami.services.AccountService;
import net.jami.services.HardwareService;
import net.jami.services.PreferencesService;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GeneralAccountPresenter_Factory implements Factory<GeneralAccountPresenter> {
  private final Provider<AccountService> mAccountServiceProvider;

  private final Provider<HardwareService> mHardwareServiceProvider;

  private final Provider<PreferencesService> mPreferenceServiceProvider;

  private final Provider<Scheduler> mUiSchedulerProvider;

  public GeneralAccountPresenter_Factory(Provider<AccountService> mAccountServiceProvider,
      Provider<HardwareService> mHardwareServiceProvider,
      Provider<PreferencesService> mPreferenceServiceProvider,
      Provider<Scheduler> mUiSchedulerProvider) {
    this.mAccountServiceProvider = mAccountServiceProvider;
    this.mHardwareServiceProvider = mHardwareServiceProvider;
    this.mPreferenceServiceProvider = mPreferenceServiceProvider;
    this.mUiSchedulerProvider = mUiSchedulerProvider;
  }

  @Override
  public GeneralAccountPresenter get() {
    return newInstance(mAccountServiceProvider.get(), mHardwareServiceProvider.get(), mPreferenceServiceProvider.get(), mUiSchedulerProvider.get());
  }

  public static GeneralAccountPresenter_Factory create(
      Provider<AccountService> mAccountServiceProvider,
      Provider<HardwareService> mHardwareServiceProvider,
      Provider<PreferencesService> mPreferenceServiceProvider,
      Provider<Scheduler> mUiSchedulerProvider) {
    return new GeneralAccountPresenter_Factory(mAccountServiceProvider, mHardwareServiceProvider, mPreferenceServiceProvider, mUiSchedulerProvider);
  }

  public static GeneralAccountPresenter newInstance(AccountService mAccountService,
      HardwareService mHardwareService, PreferencesService mPreferenceService,
      Scheduler mUiScheduler) {
    return new GeneralAccountPresenter(mAccountService, mHardwareService, mPreferenceService, mUiScheduler);
  }
}
