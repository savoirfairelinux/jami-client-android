// Generated by Dagger (https://dagger.dev).
package net.jami.contactrequests;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import io.reactivex.rxjava3.core.Scheduler;
import javax.inject.Provider;
import net.jami.services.AccountService;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BlockListPresenter_Factory implements Factory<BlockListPresenter> {
  private final Provider<AccountService> mAccountServiceProvider;

  private final Provider<Scheduler> mUiSchedulerProvider;

  public BlockListPresenter_Factory(Provider<AccountService> mAccountServiceProvider,
      Provider<Scheduler> mUiSchedulerProvider) {
    this.mAccountServiceProvider = mAccountServiceProvider;
    this.mUiSchedulerProvider = mUiSchedulerProvider;
  }

  @Override
  public BlockListPresenter get() {
    return newInstance(mAccountServiceProvider.get(), mUiSchedulerProvider.get());
  }

  public static BlockListPresenter_Factory create(Provider<AccountService> mAccountServiceProvider,
      Provider<Scheduler> mUiSchedulerProvider) {
    return new BlockListPresenter_Factory(mAccountServiceProvider, mUiSchedulerProvider);
  }

  public static BlockListPresenter newInstance(AccountService mAccountService,
      Scheduler mUiScheduler) {
    return new BlockListPresenter(mAccountService, mUiScheduler);
  }
}
