// Generated by Dagger (https://dagger.dev).
package net.jami.account;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import io.reactivex.rxjava3.core.Scheduler;
import javax.inject.Provider;
import net.jami.services.AccountService;
import net.jami.services.DeviceRuntimeService;
import net.jami.services.PreferencesService;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AccountWizardPresenter_Factory implements Factory<AccountWizardPresenter> {
  private final Provider<AccountService> mAccountServiceProvider;

  private final Provider<PreferencesService> mPreferencesProvider;

  private final Provider<DeviceRuntimeService> mDeviceServiceProvider;

  private final Provider<Scheduler> mUiSchedulerProvider;

  public AccountWizardPresenter_Factory(Provider<AccountService> mAccountServiceProvider,
      Provider<PreferencesService> mPreferencesProvider,
      Provider<DeviceRuntimeService> mDeviceServiceProvider,
      Provider<Scheduler> mUiSchedulerProvider) {
    this.mAccountServiceProvider = mAccountServiceProvider;
    this.mPreferencesProvider = mPreferencesProvider;
    this.mDeviceServiceProvider = mDeviceServiceProvider;
    this.mUiSchedulerProvider = mUiSchedulerProvider;
  }

  @Override
  public AccountWizardPresenter get() {
    return newInstance(mAccountServiceProvider.get(), mPreferencesProvider.get(), mDeviceServiceProvider.get(), mUiSchedulerProvider.get());
  }

  public static AccountWizardPresenter_Factory create(
      Provider<AccountService> mAccountServiceProvider,
      Provider<PreferencesService> mPreferencesProvider,
      Provider<DeviceRuntimeService> mDeviceServiceProvider,
      Provider<Scheduler> mUiSchedulerProvider) {
    return new AccountWizardPresenter_Factory(mAccountServiceProvider, mPreferencesProvider, mDeviceServiceProvider, mUiSchedulerProvider);
  }

  public static AccountWizardPresenter newInstance(AccountService mAccountService,
      PreferencesService mPreferences, DeviceRuntimeService mDeviceService,
      Scheduler mUiScheduler) {
    return new AccountWizardPresenter(mAccountService, mPreferences, mDeviceService, mUiScheduler);
  }
}
