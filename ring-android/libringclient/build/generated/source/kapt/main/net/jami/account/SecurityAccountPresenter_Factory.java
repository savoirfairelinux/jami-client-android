// Generated by Dagger (https://dagger.dev).
package net.jami.account;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import net.jami.services.AccountService;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SecurityAccountPresenter_Factory implements Factory<SecurityAccountPresenter> {
  private final Provider<AccountService> mAccountServiceProvider;

  public SecurityAccountPresenter_Factory(Provider<AccountService> mAccountServiceProvider) {
    this.mAccountServiceProvider = mAccountServiceProvider;
  }

  @Override
  public SecurityAccountPresenter get() {
    return newInstance(mAccountServiceProvider.get());
  }

  public static SecurityAccountPresenter_Factory create(
      Provider<AccountService> mAccountServiceProvider) {
    return new SecurityAccountPresenter_Factory(mAccountServiceProvider);
  }

  public static SecurityAccountPresenter newInstance(AccountService mAccountService) {
    return new SecurityAccountPresenter(mAccountService);
  }
}
