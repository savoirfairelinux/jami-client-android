/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.12
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_Ringservice_WRAP_H_
#define SWIG_Ringservice_WRAP_H_

class SwigDirector_Callback : public Callback, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_Callback(JNIEnv *jenv);
    virtual ~SwigDirector_Callback();
    virtual void callOnStateChange(std::string const &call_id, std::string const &state);
    virtual void callOnTransferFail();
    virtual void callOnTransferSuccess();
    virtual void callOnRecordPlaybackStopped(std::string const &path);
    virtual void callOnVoiceMailNotify(std::string const &call_id, int nd_msg);
    virtual void callOnIncomingMessage(std::string const &id, std::string const &from, std::string const &msg);
    virtual void callOnIncomingCall(std::string const &account_id, std::string const &call_id, std::string const &from);
    virtual void callOnRecordPlaybackFilepath(std::string const &id, std::string const &filename);
    virtual void callOnConferenceCreated(std::string const &conf_id);
    virtual void callOnConferenceChanged(std::string const &conf_id, std::string const &state);
    virtual void callOnUpdatePlaybackScale(std::string const &filepath, int position, int scale);
    virtual void callOnConferenceRemove(std::string const &conf_id);
    virtual void callOnNewCall(std::string const &account_id, std::string const &call_id, std::string const &to);
    virtual void callOnSipCallStateChange(std::string const &call_id, std::string const &state, int code);
    virtual void callOnRecordStateChange(std::string const &call_id, int state);
    virtual void callOnSecureSdesOn(std::string const &call_id);
    virtual void callOnSecureSdesOff(std::string const &call_id);
    virtual void callOnSecureZrtpOn(std::string const &call_id, std::string const &cipher);
    virtual void callOnSecureZrtpOff(std::string const &call_id);
    virtual void callOnShowSas(std::string const &call_id, std::string const &sas, int verified);
    virtual void callOnZrtpNotSuppOther(std::string const &call_id);
    virtual void callOnZrtpNegotiationFail(std::string const &call_id, std::string const &reason, std::string const &severity);
    virtual void callOnRtcpReceiveReport(std::string const &call_id, std::map< std::string,int > const &stats);
public:
    bool swig_overrides(int n) {
      return (n < 23 ? swig_override[n] : false);
    }
protected:
    bool swig_override[23];
};

class SwigDirector_ConfigurationCallback : public ConfigurationCallback, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_ConfigurationCallback(JNIEnv *jenv);
    virtual ~SwigDirector_ConfigurationCallback();
    virtual void configOnVolumeChange(std::string const &device, int value);
    virtual void configOnAccountsChange();
    virtual void configOnHistoryChange();
    virtual void configOnStunStatusFail(std::string const &account_id);
    virtual void configOnRegistrationStateChange(std::string const &account_id, int state);
    virtual void configOnSipRegistrationStateChange(std::string const &account_id, std::string const &state, int code);
    virtual void configOnError(int alert);
    virtual std::vector< int32_t > configGetHardwareAudioFormat();
public:
    bool swig_overrides(int n) {
      return (n < 8 ? swig_override[n] : false);
    }
protected:
    bool swig_override[8];
};


#endif
