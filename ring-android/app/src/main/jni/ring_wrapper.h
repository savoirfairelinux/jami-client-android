/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.12
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_Ringservice_WRAP_H_
#define SWIG_Ringservice_WRAP_H_

class SwigDirector_Callback : public Callback, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_Callback(JNIEnv *jenv);
    virtual ~SwigDirector_Callback();
    virtual void callStateChanged(std::string const &call_id, std::string const &state, int detail_code);
    virtual void transferFailed();
    virtual void transferSucceeded();
    virtual void recordPlaybackStopped(std::string const &path);
    virtual void voiceMailNotify(std::string const &call_id, int nd_msg);
    virtual void incomingMessage(std::string const &id, std::string const &from, std::string const &msg);
    virtual void incomingCall(std::string const &account_id, std::string const &call_id, std::string const &from);
    virtual void recordPlaybackFilepath(std::string const &id, std::string const &filename);
    virtual void conferenceCreated(std::string const &conf_id);
    virtual void conferenceChanged(std::string const &conf_id, std::string const &state);
    virtual void conferenceRemoved(std::string const &conf_id);
    virtual void newCallCreated(std::string const &call_id, std::string const &arg1, std::string const &arg2);
    virtual void updatePlaybackScale(std::string const &filepath, int position, int scale);
    virtual void conferenceRemove(std::string const &conf_id);
    virtual void newCall(std::string const &account_id, std::string const &call_id, std::string const &to);
    virtual void sipCallStateChange(std::string const &call_id, std::string const &state, int code);
    virtual void recordingStateChanged(std::string const &call_id, int code);
    virtual void recordStateChange(std::string const &call_id, int state);
    virtual void secureSdesOn(std::string const &call_id);
    virtual void secureSdesOff(std::string const &call_id);
    virtual void secureZrtpOn(std::string const &call_id, std::string const &cipher);
    virtual void secureZrtpOff(std::string const &call_id);
    virtual void showSAS(std::string const &call_id, std::string const &sas, int verified);
    virtual void zrtpNotSuppOther(std::string const &call_id);
    virtual void zrtpNegotiationFailed(std::string const &call_id, std::string const &reason, std::string const &severity);
    virtual void onRtcpReportReceived(std::string const &call_id, std::map< std::string,int > const &stats);
    virtual void peerHold(std::string const &call_id, bool holding);
public:
    bool swig_overrides(int n) {
      return (n < 27 ? swig_override[n] : false);
    }
protected:
    bool swig_override[27];
};

class SwigDirector_ConfigurationCallback : public ConfigurationCallback, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_ConfigurationCallback(JNIEnv *jenv);
    virtual ~SwigDirector_ConfigurationCallback();
    virtual void volumeChanged(std::string const &device, int value);
    virtual void accountsChanged();
    virtual void historyChanged();
    virtual void stunStatusFailure(std::string const &account_id);
    virtual void registrationStateChanged(std::string const &account_id, std::string const &state, int code, std::string const &detail_str);
    virtual void volatileAccountDetailsChanged(std::string const &account_id, std::map< std::string,std::string > const &details);
    virtual void incomingAccountMessage(std::string const &arg0, std::string const &arg1, std::string const &arg2);
    virtual void incomingTrustRequest(std::string const &arg0, std::string const &arg1, time_t received);
    virtual void certificatePinned(std::string const &arg0);
    virtual void certificatePathPinned(std::string const &arg0, std::vector< std::string > const &arg1);
    virtual void certificateExpired(std::string const &arg0);
    virtual void certificateStateChanged(std::string const &arg0, std::string const &arg1, std::string const &arg2);
    virtual void errorAlert(int alert);
    virtual std::vector< int32_t > configGetHardwareAudioFormat();
public:
    bool swig_overrides(int n) {
      return (n < 14 ? swig_override[n] : false);
    }
protected:
    bool swig_override[14];
};


#endif
